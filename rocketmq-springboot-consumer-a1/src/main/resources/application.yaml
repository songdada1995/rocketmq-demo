server:
  port: 8082

spring:
  application:
    name: rocketmq-consumer-a1

rocketmq:
  name-server: localhost:9876
  consumer:
    group: my-consumer-group1
    topic: default-test-topic
    # default LitePullConsumer TLS
    tlsEnable: false
    # 可以将accessKey和secretKey理解成用户名和密码
#    access-key: testACL
    access-key: adminACL
    secret-key: 12345678

demo:
  rocketmq:
    topic: string-topic
    user-topic: user-topic
    orderTopic: order-paid-topic
    msgExtTopic: message-ext-topic
    transTopic: spring-transaction-topic

    bytesRequestTopic: bytesRequestTopic
    genericRequestTopic: genericRequestTopic
    objectRequestTopic: objectRequestTopic
    stringRequestTopic: stringRequestTopic

    # 消费者组
    bytesRequestConsumer: bytesRequestConsumerGroup
    genericRequestConsumer: genericRequestConsumerGroup
    objectRequestConsumer: objectRequestConsumerGroup
    stringRequestConsumer: stringRequestConsumerGroup
    consumer-group: demo-consumer-group
    order-consumer-group: order-paid-consumer-group
    trans-consumer-group: string-trans-consumer-group
    user-consumer-group: user-consumer-group
    string-newns-consumer-group: string-newns-consumer-group
    message-ext-consumer-group: message-ext-consumer-group

    # 死信队列消费者组
    dlq-message-ext-consumer-group: dlq-message-ext-consumer-group

    tag: tagA
    # my Consumer TLS Listener
    tlsEnable: false
    # another nameserver different global
    myNameServer: 127.0.0.1:9876

  # ext rocketmq consumer template TLS
  ext:
    consumer:
      tlsEnable: false

# 订单
order:
  rocketmq:
    topic: trans-order-topic
    tag-order: tag-order
    points-consumer-group: trans-order-points-consumer-group
    stock-consumer-group: trans-order-stock-consumer-group
    # 死信队列消费者组
    dlq-points-consumer-group: dlq-points-consumer-group
    dlq-stock-consumer-group: dlq-stock-consumer-group